1.单组件组成
   
 1.三个部分组成
     
   1.template
         只能存在一个根元素
      
   2.Script
      
   3.Style
         scoped:样式只在当前组件生效
   
 2.子父级组件交互(通信):
      
 父->子：props 它为数组
      
 子――>父：emit Events
       
数据传递类型限制(验证)
         
 1.数据类型验证
          
 2.多数据类型验证
          
 3.必选项
         
 4.默认值
  
     1.普通数据的默认值        
     2.obj,arr数据类型的默认值



*父向子传递传值(props)
    
1.首先必须在父文件中先加载son组件
    
2.在子组件中绑定值例如 :da="msg" msg在data中定义值
    
3.在子文件中使用props例如:props["da"]
    
4.在子文件中使用模板语法取得值 {{da}}

    

*子向父组件传值
    
1.首先必须在父文件中加载子组件
    
2.在子文件中定义监听事件写好函数
    
3.在子文件刚写好的函数中通过this.$emit()进行传值,有两个参数一个是key一个是值
    
4.在父文件的子组件中将emit中的key当作事件进行监听,定义好一个函数,在定义好的函数中进行传值
    
5.通过模板语法获得值
   

3.插槽（不传递数据则可以设置默认值）
     
      单个插槽
     
      具名插槽
     
      作用域插槽：数据是子传父
          注意：在2.5.0之前作用域插槽必须用到template上
 
 4.动态组件
  
keep-alive:保持组件状态避免重新渲染

2.CSS过渡与动画
  
  1.在 CSS 过渡和动画中自动应用 class（具体演示可见vue.js官方网站）
    
       过渡类名：直接使用六个类名
        
            enter：
        
            v-enter:进入开始 在元素被插入之前生效，在元素被插入之后的下一帧移除。
        
            v-enter-active:执行过程中
        
            v-enter-to:结束动画
        
            leave：
        
            v-leave:离开开始
        
            v-leave-active:离开过程
        
            v-leave-to:离开结束
    
动画：直接使用两个就行
  2.可以配合使用第三方 CSS 动画库，如 Animate.css

3.自定义指令(hello.vue)
  1.全局指令
  2.局部指令